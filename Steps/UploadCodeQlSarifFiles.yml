## @file
# Azure Pipelines step to upload CodeQL results (SARIF files) to GitHub Code Scanning.
#
# - A secret variable named "code_scanning_token" must be available to this pipeline
#   that contains a PAT with the "security_events" write permission in the target
#   repository.
#
# Copyright (c) Microsoft Corporation. All rights reserved.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

steps:
# Collect the SARIF files in a single directory
- task: CopyFiles@2
  displayName: Copy SARIF Files
  inputs:
    targetFolder: "$(Build.ArtifactStagingDirectory)/CodeQlSarifFiles"
    SourceFolder: "Build"
    contents: |
      **/*.sarif
    flattenFolders: true
  condition: succeeded()

- task: PublishBuildArtifacts@1
  continueOnError: true
  displayName: Publish SARIF Files
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/CodeQlSarifFiles'
    artifactName: 'SARIF Files ${{ parameters.artifacts_identifier }}'
  condition: succeeded()

- task: Bash@3
  name: UploadCodeQlResultsToGitHub
  displayName: Upload CodeQL Results to GitHub Code Scanning
  env:
    CHECKOUT_URI: $(Build.Repository.LocalPath)
    COMMIT_SHA: $(Build.SourceVersion)
    CODE_SCANNING_TOKEN: $(code_scanning_token)
    REPO_NAME: $(Build.Repository.Name)
    REPO_URL: $(Build.Repository.Uri)
    SOURCE_BRANCH: $(Build.SourceBranch)
  inputs:
    targetType: 'inline'
    script: |
      analysisTime=$ANALYSIS_START_TIME
      checkoutUri=$CHECKOUT_URI
      commitSha=$COMMIT_SHA
      resultDirectory="${BUILD_ARTIFACTSTAGINGDIRECTORY}/CodeQlSarifFiles"
      sourceBranch=$SOURCE_BRANCH
      if [[ ! -n "$analysisTime" ]]; then
        analysisTime=$(date --iso-8601=seconds)
      fi

      for file in "${resultDirectory}"/*; do
        sarifData=$(gzip -c "${file}" | base64 -w0)
        echo -d '{"commit_sha":"'"${commitSha}"'","ref":"'"${sourceBranch}"'","sarif":"'"${sarifData}"'","started_at":"'"${analysisTime}"'"}'
        curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $CODE_SCANNING_TOKEN"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${REPO_NAME}/code-scanning/sarifs \
          -d '{"commit_sha":"'"${commitSha}"'","ref":"'"${sourceBranch}"'","sarif":"'"${sarifData}"'","started_at":"'"${analysisTime}"'"}'
          done
  condition: succeeded()
